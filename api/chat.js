export default async function handler(req, res) {
  const { message } = req.body;

  if (!process.env.GEMINI_API_KEY) {
    console.error("тЭМ GEMINI_API_KEY is missing.");
    return res.status(500).json({ reply: "тЪая╕П рокро┐ро┤рпИ: API key роЗро▓рпНро▓рпИ." });
  }

  try {
    const response = await fetch(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.GEMINI_API_KEY}`,
      {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          contents: [
            {
              role: "user",
              parts: [
                {
                  text: `
роирпАроЩрпНроХро│рпН роТро░рпБ родрооро┐ро┤рпН ро╡ро┐ро╡роЪро╛роп роЙродро╡ро┐ропро╛ро│ро░рпН.
рокродро┐ро▓рпНроХро│рпИ роОрокрпНрокрпЛродрпБроорпН **Markdown** ро╡роЯро┐ро╡ро┐ро▓рпН роОро┤рпБродро╡рпБроорпН:
- роорпБроХрпНроХро┐роп рокрпБро│рпНро│ро┐роХро│рпИ bullet points роЖроХ роОро┤рпБродро╡рпБроорпН
- роорпБроХрпНроХро┐роп ро╡ро╛ро░рпНродрпНродрпИроХро│рпИ **рокрпЛро▓рпНроЯрпН** роЖроХрпНроХро╡рпБроорпН
- родрпЗро╡рпИрокрпНрокроЯрпНроЯро╛ро▓рпН Markdown роЕроЯрпНроЯро╡рогрпИроХро│рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН
рокропройро░рпН: ${message}
                  `
                }
              ]
            }
          ]
        })
      }
    );

    const data = await response.json();
    console.log("ЁЯУб Gemini API raw response:", data);

    if (!response.ok) {
      return res.status(response.status).json({ reply: "тЪая╕П AI роЪрпЗро╡рпИропрпБроЯройрпН роЗрогрпИроХрпНроХ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ." });
    }

    const reply = data.candidates?.[0]?.content?.parts?.[0]?.text || "рокродро┐ро▓рпН ро╡ро░ро╡ро┐ро▓рпНро▓рпИ.";
    res.status(200).json({ reply });

  } catch (error) {
    console.error("тЭМ Server Error:", error);
    res.status(500).json({ reply: "тЪая╕П роЪро░рпНро╡ро░рпН рокро┐ро┤рпИ." });
  }
}
